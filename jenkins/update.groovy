// if (env.BRANCH_NAME == "main") {
//     properties([
//         pipelineTriggers([
//             pollSCM("* * * * *")
//         ])
//     ])
// }

def DB_VERSION

pipeline {
    agent any
    stages {
        stage('Configure Credentials') {
            steps {
                sh '''
                git config --global user.email "jenkins@solfacil.com.br" && git config --global user.name "Jenkins" && echo "driver: org.postgresql.Driver\nurl: jdbc:postgresql://postgres_test:5432/solfacil\nusername: solfacil\npassword: solfacil\nchangeLogFile: ./db.changelog.xml\nliquibase.hub.mode=off" > liquibase.properties
                '''
            }
        }
        stage('Configure Database Version') {
            steps {
                script {
                    major_minor = readFile "database.version"
                    DB_VERSION="$major_minor.$BUILD_NUMBER"
                }
                echo "Generating database version $DB_VERSION"
            }
        }
        stage('Update Database') {
            steps {
                sh '''
                    /opt/liquibase/liquibase update
                '''
            }
        }
        stage('Tag Database') {
            steps {
                sh('/opt/liquibase/liquibase tag ' + "$DB_VERSION")
            }
        }
        stage('Tag Repository') {
            steps {
                echo "Generating database version $DB_VERSION"
                sh('git tag -a ' + "$DB_VERSION" + ' -m "Version generated by Liquibase"') 
            }
        }
        stage('Publish Database Tag') {
            steps {
                withCredentials([string(credentialsId: 'github_token', variable: 'GITHUB_TOKEN')]) {
                    sh('git push https://$GITHUB_TOKEN@github.com/mateuschmitz/liquibase_jenkins_demo.git ' + "$DB_VERSION")
                }
            }
        }
    }
}
